// Code generated by ent, DO NOT EDIT.

package ent

import (
	"locathlete-server/ent/athlete"
	"locathlete-server/ent/athleteschool"
	"locathlete-server/ent/schema"
	"locathlete-server/ent/school"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	athleteFields := schema.Athlete{}.Fields()
	_ = athleteFields
	// athleteDescBio is the schema descriptor for bio field.
	athleteDescBio := athleteFields[0].Descriptor()
	// athlete.BioValidator is a validator for the "bio" field. It is called by the builders before save.
	athlete.BioValidator = athleteDescBio.Validators[0].(func(string) error)
	// athleteDescFirstName is the schema descriptor for first_name field.
	athleteDescFirstName := athleteFields[1].Descriptor()
	// athlete.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	athlete.FirstNameValidator = athleteDescFirstName.Validators[0].(func(string) error)
	// athleteDescLastName is the schema descriptor for last_name field.
	athleteDescLastName := athleteFields[3].Descriptor()
	// athlete.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	athlete.LastNameValidator = athleteDescLastName.Validators[0].(func(string) error)
	// athleteDescCreatedAt is the schema descriptor for created_at field.
	athleteDescCreatedAt := athleteFields[4].Descriptor()
	// athlete.DefaultCreatedAt holds the default value on creation for the created_at field.
	athlete.DefaultCreatedAt = athleteDescCreatedAt.Default.(func() time.Time)
	// athleteDescUpdatedAt is the schema descriptor for updated_at field.
	athleteDescUpdatedAt := athleteFields[5].Descriptor()
	// athlete.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	athlete.DefaultUpdatedAt = athleteDescUpdatedAt.Default.(func() time.Time)
	// athlete.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	athlete.UpdateDefaultUpdatedAt = athleteDescUpdatedAt.UpdateDefault.(func() time.Time)
	athleteschoolFields := schema.AthleteSchool{}.Fields()
	_ = athleteschoolFields
	// athleteschoolDescCreatedAt is the schema descriptor for created_at field.
	athleteschoolDescCreatedAt := athleteschoolFields[4].Descriptor()
	// athleteschool.DefaultCreatedAt holds the default value on creation for the created_at field.
	athleteschool.DefaultCreatedAt = athleteschoolDescCreatedAt.Default.(func() time.Time)
	schoolFields := schema.School{}.Fields()
	_ = schoolFields
	// schoolDescName is the schema descriptor for name field.
	schoolDescName := schoolFields[0].Descriptor()
	// school.NameValidator is a validator for the "name" field. It is called by the builders before save.
	school.NameValidator = schoolDescName.Validators[0].(func(string) error)
	// schoolDescDescription is the schema descriptor for description field.
	schoolDescDescription := schoolFields[1].Descriptor()
	// school.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	school.DescriptionValidator = schoolDescDescription.Validators[0].(func(string) error)
	// schoolDescStreetAddress is the schema descriptor for street_address field.
	schoolDescStreetAddress := schoolFields[2].Descriptor()
	// school.StreetAddressValidator is a validator for the "street_address" field. It is called by the builders before save.
	school.StreetAddressValidator = schoolDescStreetAddress.Validators[0].(func(string) error)
	// schoolDescCity is the schema descriptor for city field.
	schoolDescCity := schoolFields[3].Descriptor()
	// school.CityValidator is a validator for the "city" field. It is called by the builders before save.
	school.CityValidator = schoolDescCity.Validators[0].(func(string) error)
	// schoolDescCountry is the schema descriptor for country field.
	schoolDescCountry := schoolFields[4].Descriptor()
	// school.CountryValidator is a validator for the "country" field. It is called by the builders before save.
	school.CountryValidator = schoolDescCountry.Validators[0].(func(string) error)
	// schoolDescAdministrationArea is the schema descriptor for administration_area field.
	schoolDescAdministrationArea := schoolFields[5].Descriptor()
	// school.AdministrationAreaValidator is a validator for the "administration_area" field. It is called by the builders before save.
	school.AdministrationAreaValidator = schoolDescAdministrationArea.Validators[0].(func(string) error)
	// schoolDescPostalCode is the schema descriptor for postal_code field.
	schoolDescPostalCode := schoolFields[6].Descriptor()
	// school.PostalCodeValidator is a validator for the "postal_code" field. It is called by the builders before save.
	school.PostalCodeValidator = schoolDescPostalCode.Validators[0].(func(string) error)
	// schoolDescLat is the schema descriptor for lat field.
	schoolDescLat := schoolFields[7].Descriptor()
	// school.LatValidator is a validator for the "lat" field. It is called by the builders before save.
	school.LatValidator = schoolDescLat.Validators[0].(func(float64) error)
	// schoolDescLng is the schema descriptor for lng field.
	schoolDescLng := schoolFields[8].Descriptor()
	// school.LngValidator is a validator for the "lng" field. It is called by the builders before save.
	school.LngValidator = schoolDescLng.Validators[0].(func(float64) error)
	// schoolDescCreatedAt is the schema descriptor for created_at field.
	schoolDescCreatedAt := schoolFields[9].Descriptor()
	// school.DefaultCreatedAt holds the default value on creation for the created_at field.
	school.DefaultCreatedAt = schoolDescCreatedAt.Default.(func() time.Time)
	// schoolDescUpdatedAt is the schema descriptor for updated_at field.
	schoolDescUpdatedAt := schoolFields[10].Descriptor()
	// school.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	school.DefaultUpdatedAt = schoolDescUpdatedAt.Default.(func() time.Time)
	// school.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	school.UpdateDefaultUpdatedAt = schoolDescUpdatedAt.UpdateDefault.(func() time.Time)
}
